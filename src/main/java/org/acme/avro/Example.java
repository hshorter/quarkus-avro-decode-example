/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.acme.avro;

import java.util.concurrent.atomic.AtomicReference;

import org.apache.avro.io.DatumReader;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
@io.quarkus.runtime.annotations.RegisterForReflection
public class Example extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1328632667577791492L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Example\",\"namespace\":\"org.acme.avro\",\"fields\":[{\"name\":\"ExampleHeader\",\"type\":{\"type\":\"record\",\"name\":\"exampleHeaderFields\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"time\",\"type\":\"long\"}]}},{\"name\":\"values\",\"type\":{\"type\":\"map\",\"values\":\"int\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final AtomicReference<BinaryMessageEncoder<Example>> ENCODER =
          new AtomicReference<>(null);

  private static final AtomicReference<BinaryMessageDecoder<Example>> DECODER =
          new AtomicReference<>(null);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Example> getEncoder() {
    BinaryMessageEncoder<Example> result = ENCODER.get();
    if (result == null) {
      result = new BinaryMessageEncoder<>(MODEL$, SCHEMA$);
      if (ENCODER.compareAndSet(null, result)) {
        return result;
      } else {
        return ENCODER.get();
      }
    } else {
      return result;
    }
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Example> getDecoder() {
    BinaryMessageDecoder<Example> result = DECODER.get();
    if (result == null) {
      result = new BinaryMessageDecoder<>(MODEL$, SCHEMA$);
      if (DECODER.compareAndSet(null, result)) {
        return result;
      } else {
        return DECODER.get();
      }
    } else {
      return result;
    }
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Example> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Example>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Example to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return getEncoder().encode(this);
  }

  /**
   * Deserializes a Example from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Example instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Example fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return getDecoder().decode(b);
  }

  @Deprecated public org.acme.avro.exampleHeaderFields ExampleHeader;
  @Deprecated public java.util.Map<CharSequence, Integer> values;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Example() {}

  /**
   * All-args constructor.
   * @param ExampleHeader The new value for ExampleHeader
   * @param values The new value for values
   */
  public Example(org.acme.avro.exampleHeaderFields ExampleHeader, java.util.Map<CharSequence, Integer> values) {
    this.ExampleHeader = ExampleHeader;
    this.values = values;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return ExampleHeader;
    case 1: return values;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: ExampleHeader = (org.acme.avro.exampleHeaderFields)value$; break;
    case 1: values = (java.util.Map<CharSequence, Integer>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ExampleHeader' field.
   * @return The value of the 'ExampleHeader' field.
   */
  public org.acme.avro.exampleHeaderFields getExampleHeader() {
    return ExampleHeader;
  }


  /**
   * Sets the value of the 'ExampleHeader' field.
   * @param value the value to set.
   */
  public void setExampleHeader(org.acme.avro.exampleHeaderFields value) {
    this.ExampleHeader = value;
  }

  /**
   * Gets the value of the 'values' field.
   * @return The value of the 'values' field.
   */
  public java.util.Map<CharSequence, Integer> getValues() {
    return values;
  }


  /**
   * Sets the value of the 'values' field.
   * @param value the value to set.
   */
  public void setValues(java.util.Map<CharSequence, Integer> value) {
    this.values = value;
  }

  /**
   * Creates a new Example RecordBuilder.
   * @return A new Example RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new Example RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Example RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    if (other == null) {
      return new Builder();
    } else {
      return new Builder(other);
    }
  }

  /**
   * Creates a new Example RecordBuilder by copying an existing Example instance.
   * @param other The existing instance to copy.
   * @return A new Example RecordBuilder
   */
  public static Builder newBuilder(Example other) {
    if (other == null) {
      return new Builder();
    } else {
      return new Builder(other);
    }
  }

  /**
   * RecordBuilder for Example instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Example>
    implements org.apache.avro.data.RecordBuilder<Example> {

    private org.acme.avro.exampleHeaderFields ExampleHeader;
    private org.acme.avro.exampleHeaderFields.Builder ExampleHeaderBuilder;
    private java.util.Map<CharSequence, Integer> values;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ExampleHeader)) {
        this.ExampleHeader = data().deepCopy(fields()[0].schema(), other.ExampleHeader);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasExampleHeaderBuilder()) {
        this.ExampleHeaderBuilder = org.acme.avro.exampleHeaderFields.newBuilder(other.getExampleHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.values)) {
        this.values = data().deepCopy(fields()[1].schema(), other.values);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing Example instance
     * @param other The existing instance to copy.
     */
    private Builder(Example other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.ExampleHeader)) {
        this.ExampleHeader = data().deepCopy(fields()[0].schema(), other.ExampleHeader);
        fieldSetFlags()[0] = true;
      }
      this.ExampleHeaderBuilder = null;
      if (isValidValue(fields()[1], other.values)) {
        this.values = data().deepCopy(fields()[1].schema(), other.values);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'ExampleHeader' field.
      * @return The value.
      */
    public org.acme.avro.exampleHeaderFields getExampleHeader() {
      return ExampleHeader;
    }


    /**
      * Sets the value of the 'ExampleHeader' field.
      * @param value The value of 'ExampleHeader'.
      * @return This builder.
      */
    public Builder setExampleHeader(org.acme.avro.exampleHeaderFields value) {
      validate(fields()[0], value);
      this.ExampleHeaderBuilder = null;
      this.ExampleHeader = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ExampleHeader' field has been set.
      * @return True if the 'ExampleHeader' field has been set, false otherwise.
      */
    public boolean hasExampleHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'ExampleHeader' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.acme.avro.exampleHeaderFields.Builder getExampleHeaderBuilder() {
      if (ExampleHeaderBuilder == null) {
        if (hasExampleHeader()) {
          setExampleHeaderBuilder(org.acme.avro.exampleHeaderFields.newBuilder(ExampleHeader));
        } else {
          setExampleHeaderBuilder(org.acme.avro.exampleHeaderFields.newBuilder());
        }
      }
      return ExampleHeaderBuilder;
    }

    /**
     * Sets the Builder instance for the 'ExampleHeader' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setExampleHeaderBuilder(org.acme.avro.exampleHeaderFields.Builder value) {
      clearExampleHeader();
      ExampleHeaderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'ExampleHeader' field has an active Builder instance
     * @return True if the 'ExampleHeader' field has an active Builder instance
     */
    public boolean hasExampleHeaderBuilder() {
      return ExampleHeaderBuilder != null;
    }

    /**
      * Clears the value of the 'ExampleHeader' field.
      * @return This builder.
      */
    public Builder clearExampleHeader() {
      ExampleHeader = null;
      ExampleHeaderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'values' field.
      * @return The value.
      */
    public java.util.Map<CharSequence, Integer> getValues() {
      return values;
    }


    /**
      * Sets the value of the 'values' field.
      * @param value The value of 'values'.
      * @return This builder.
      */
    public Builder setValues(java.util.Map<CharSequence, Integer> value) {
      validate(fields()[1], value);
      this.values = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'values' field has been set.
      * @return True if the 'values' field has been set, false otherwise.
      */
    public boolean hasValues() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'values' field.
      * @return This builder.
      */
    public Builder clearValues() {
      values = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Example build() {
      try {
        Example record = new Example();
        if (ExampleHeaderBuilder != null) {
          try {
            record.ExampleHeader = this.ExampleHeaderBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("ExampleHeader"));
            throw e;
          }
        } else {
          record.ExampleHeader = fieldSetFlags()[0] ? this.ExampleHeader : (org.acme.avro.exampleHeaderFields) defaultValue(fields()[0]);
        }
        record.values = fieldSetFlags()[1] ? this.values : (java.util.Map<CharSequence, Integer>) defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Example>
    WRITER$ = (org.apache.avro.io.DatumWriter<Example>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final AtomicReference<org.apache.avro.io.DatumReader<Example>>
    READER$ = new AtomicReference<>(null);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    DatumReader<Example> result = READER$.get();
    if (result == null) {
      result = (DatumReader<Example>)MODEL$.createDatumReader(SCHEMA$);
      if (READER$.compareAndSet(null, result)) {
        result.read(this, SpecificData.getDecoder(in));
      } else {
        READER$.get().read(this, SpecificData.getDecoder(in));
      }
    } else {
      result.read(this, SpecificData.getDecoder(in));
    }
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.ExampleHeader.customEncode(out);

    long size0 = this.values.size();
    out.writeMapStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.util.Map.Entry<CharSequence, Integer> e0: this.values.entrySet()) {
      actualSize0++;
      out.startItem();
      out.writeString(e0.getKey());
      Integer v0 = e0.getValue();
      out.writeInt(v0);
    }
    out.writeMapEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.ExampleHeader == null) {
        this.ExampleHeader = new org.acme.avro.exampleHeaderFields();
      }
      this.ExampleHeader.customDecode(in);

      long size0 = in.readMapStart();
      java.util.Map<CharSequence, Integer> m0 = this.values; // Need fresh name due to limitation of macro system
      if (m0 == null) {
        m0 = new java.util.HashMap<CharSequence, Integer>((int)size0);
        this.values = m0;
      } else m0.clear();
      for ( ; 0 < size0; size0 = in.mapNext()) {
        for ( ; size0 != 0; size0--) {
          CharSequence k0 = null;
          k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
          Integer v0 = null;
          v0 = in.readInt();
          m0.put(k0, v0);
        }
      }

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.ExampleHeader == null) {
            this.ExampleHeader = new org.acme.avro.exampleHeaderFields();
          }
          this.ExampleHeader.customDecode(in);
          break;

        case 1:
          long size0 = in.readMapStart();
          java.util.Map<CharSequence, Integer> m0 = this.values; // Need fresh name due to limitation of macro system
          if (m0 == null) {
            m0 = new java.util.HashMap<CharSequence, Integer>((int)size0);
            this.values = m0;
          } else m0.clear();
          for ( ; 0 < size0; size0 = in.mapNext()) {
            for ( ; size0 != 0; size0--) {
              CharSequence k0 = null;
              k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
              Integer v0 = null;
              v0 = in.readInt();
              m0.put(k0, v0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










